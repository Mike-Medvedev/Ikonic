// This file is auto-generated by @hey-api/openapi-ts

export type AttendanceList = {
    accepted: Array<UserPublic>;
    pending: Array<UserPublic>;
    uncertain: Array<UserPublic>;
    declined: Array<UserPublic>;
};

export type CarCreate = {
    seatCount?: number;
    passengers?: Array<Passenger>;
};

export type CarPublic = {
    seatCount?: number;
    passengers?: Array<UserPublic>;
    id: string;
    tripId: string;
    owner: UserPublic;
};

export type DtoAttendanceList = {
    data: AttendanceList;
};

export type DtoCarPublic = {
    data: CarPublic;
};

export type DtoFriendshipPublic = {
    data: FriendshipPublic;
};

export type DtoPassengerCreate = {
    data: PassengerCreate;
};

export type DtoTripPublic = {
    data: TripPublic;
};

export type DtoUserPublic = {
    data: UserPublic;
};

export type DtoBool = {
    data: boolean;
};

export type DtoListCarPublic = {
    data: Array<CarPublic>;
};

export type DtoListFriendshipPublic = {
    data: Array<FriendshipPublic>;
};

export type DtoListPassengerPublic = {
    data: Array<PassengerPublic>;
};

export type DtoListTripPublic = {
    data: Array<TripPublic>;
};

export type DtoListUserPublic = {
    data: Array<UserPublic>;
};

export type DtoListUserWithFriendshipInfo = {
    data: Array<UserWithFriendshipInfo>;
};

export type DeepLink = {
    deepLink: string;
};

export type FriendRequestType = 'outgoing' | 'incoming';

export type FriendshipCreate = {
    addresseeId: string;
};

export type FriendshipPublic = {
    id: string;
    requester: User;
    addressee: User;
    status: FriendshipStatus;
};

export type FriendshipStatus = 'pending' | 'accepted' | 'rejected' | 'blocked';

export type FriendshipUpdate = {
    status: FriendshipStatus;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Passenger = {
    user_id: string;
    car_id: string;
    seat_position?: number | null;
};

export type PassengerCreate = {
    userId: string;
    seatPosition: number;
};

export type PassengerPublic = {
    userId: string;
    seatPosition: number;
    carId: string;
};

export type RiderType = 'skier' | 'snowboarder';

export type TripCreate = {
    title: string;
    startDate: string;
    endDate: string;
    mountain: string;
    desc?: string | null;
};

export type TripParticipationRsvp = {
    rsvp?: string | null;
    paid?: number | null;
};

export type TripPublic = {
    title: string;
    startDate: string;
    endDate: string;
    mountain: string;
    desc?: string | null;
    id: string;
    owner: UserPublic;
    tripImageStoragePath: string | null;
};

export type TripUpdate = {
    title?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    mountain?: string | null;
    desc?: string | null;
    tripImageStoragePath?: string | null;
};

export type User = {
    id: string;
    phone?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    username?: string | null;
    rider_type?: RiderType | null;
    is_onboarded?: boolean;
    avatar_storage_path?: string | null;
    avatar_public_url?: string | null;
};

export type UserPublic = {
    id: string;
    phone: string;
    firstname: string | null;
    lastname: string | null;
    username: string | null;
    riderType: RiderType | null;
    isOnboarded: boolean;
    avatarPublicUrl: string | null;
};

export type UserUpdate = {
    phone?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    username?: string | null;
    riderType?: RiderType | null;
    avatarStoragePath?: string | null;
};

export type UserWithFriendshipInfo = {
    user: UserPublic;
    friendshipId: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type MainApiV1GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type MainApiV1GetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type MainApiV1GetResponse = MainApiV1GetResponses[keyof MainApiV1GetResponses];

export type GetUsersApiV1UsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/';
};

export type GetUsersApiV1UsersGetResponses = {
    /**
     * Successful Response
     */
    200: DtoListUserPublic;
};

export type GetUsersApiV1UsersGetResponse = GetUsersApiV1UsersGetResponses[keyof GetUsersApiV1UsersGetResponses];

export type GetUserByIdApiV1UsersUserIdGetData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type GetUserByIdApiV1UsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserByIdApiV1UsersUserIdGetError = GetUserByIdApiV1UsersUserIdGetErrors[keyof GetUserByIdApiV1UsersUserIdGetErrors];

export type GetUserByIdApiV1UsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: DtoUserPublic;
};

export type GetUserByIdApiV1UsersUserIdGetResponse = GetUserByIdApiV1UsersUserIdGetResponses[keyof GetUserByIdApiV1UsersUserIdGetResponses];

export type UpdateUserApiV1UsersUserIdPatchData = {
    body: UserUpdate;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type UpdateUserApiV1UsersUserIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserApiV1UsersUserIdPatchError = UpdateUserApiV1UsersUserIdPatchErrors[keyof UpdateUserApiV1UsersUserIdPatchErrors];

export type UpdateUserApiV1UsersUserIdPatchResponses = {
    /**
     * Successful Response
     */
    200: DtoUserPublic;
};

export type UpdateUserApiV1UsersUserIdPatchResponse = UpdateUserApiV1UsersUserIdPatchResponses[keyof UpdateUserApiV1UsersUserIdPatchResponses];

export type CompleteOnboardingApiV1UsersOnboardingPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/onboarding';
};

export type CompleteOnboardingApiV1UsersOnboardingPostResponses = {
    /**
     * Successful Response
     */
    200: DtoBool;
};

export type CompleteOnboardingApiV1UsersOnboardingPostResponse = CompleteOnboardingApiV1UsersOnboardingPostResponses[keyof CompleteOnboardingApiV1UsersOnboardingPostResponses];

export type GetTripsApiV1TripsGetData = {
    body?: never;
    path?: never;
    query?: {
        past?: boolean;
    };
    url: '/api/v1/trips/';
};

export type GetTripsApiV1TripsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTripsApiV1TripsGetError = GetTripsApiV1TripsGetErrors[keyof GetTripsApiV1TripsGetErrors];

export type GetTripsApiV1TripsGetResponses = {
    /**
     * Successful Response
     */
    200: DtoListTripPublic;
};

export type GetTripsApiV1TripsGetResponse = GetTripsApiV1TripsGetResponses[keyof GetTripsApiV1TripsGetResponses];

export type CreateTripApiV1TripsPostData = {
    body: TripCreate;
    path?: never;
    query?: never;
    url: '/api/v1/trips/';
};

export type CreateTripApiV1TripsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTripApiV1TripsPostError = CreateTripApiV1TripsPostErrors[keyof CreateTripApiV1TripsPostErrors];

export type CreateTripApiV1TripsPostResponses = {
    /**
     * Successful Response
     */
    200: DtoTripPublic;
};

export type CreateTripApiV1TripsPostResponse = CreateTripApiV1TripsPostResponses[keyof CreateTripApiV1TripsPostResponses];

export type DeleteTripApiV1TripsTripIdDeleteData = {
    body?: never;
    path: {
        trip_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}';
};

export type DeleteTripApiV1TripsTripIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTripApiV1TripsTripIdDeleteError = DeleteTripApiV1TripsTripIdDeleteErrors[keyof DeleteTripApiV1TripsTripIdDeleteErrors];

export type DeleteTripApiV1TripsTripIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteTripApiV1TripsTripIdDeleteResponse = DeleteTripApiV1TripsTripIdDeleteResponses[keyof DeleteTripApiV1TripsTripIdDeleteResponses];

export type GetTripApiV1TripsTripIdGetData = {
    body?: never;
    path: {
        trip_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}';
};

export type GetTripApiV1TripsTripIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTripApiV1TripsTripIdGetError = GetTripApiV1TripsTripIdGetErrors[keyof GetTripApiV1TripsTripIdGetErrors];

export type GetTripApiV1TripsTripIdGetResponses = {
    /**
     * Successful Response
     */
    200: DtoTripPublic;
};

export type GetTripApiV1TripsTripIdGetResponse = GetTripApiV1TripsTripIdGetResponses[keyof GetTripApiV1TripsTripIdGetResponses];

export type UpdateTripApiV1TripsTripIdPatchData = {
    body: TripUpdate;
    path: {
        trip_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}';
};

export type UpdateTripApiV1TripsTripIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateTripApiV1TripsTripIdPatchError = UpdateTripApiV1TripsTripIdPatchErrors[keyof UpdateTripApiV1TripsTripIdPatchErrors];

export type UpdateTripApiV1TripsTripIdPatchResponses = {
    /**
     * Successful Response
     */
    200: DtoTripPublic;
};

export type UpdateTripApiV1TripsTripIdPatchResponse = UpdateTripApiV1TripsTripIdPatchResponses[keyof UpdateTripApiV1TripsTripIdPatchResponses];

export type GetCarsForTripApiV1TripsTripIdCarsGetData = {
    body?: never;
    path: {
        trip_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/cars/';
};

export type GetCarsForTripApiV1TripsTripIdCarsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCarsForTripApiV1TripsTripIdCarsGetError = GetCarsForTripApiV1TripsTripIdCarsGetErrors[keyof GetCarsForTripApiV1TripsTripIdCarsGetErrors];

export type GetCarsForTripApiV1TripsTripIdCarsGetResponses = {
    /**
     * Successful Response
     */
    200: DtoListCarPublic;
};

export type GetCarsForTripApiV1TripsTripIdCarsGetResponse = GetCarsForTripApiV1TripsTripIdCarsGetResponses[keyof GetCarsForTripApiV1TripsTripIdCarsGetResponses];

export type CreateCarApiV1TripsTripIdCarsPostData = {
    body: CarCreate;
    path: {
        trip_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/cars/';
};

export type CreateCarApiV1TripsTripIdCarsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCarApiV1TripsTripIdCarsPostError = CreateCarApiV1TripsTripIdCarsPostErrors[keyof CreateCarApiV1TripsTripIdCarsPostErrors];

export type CreateCarApiV1TripsTripIdCarsPostResponses = {
    /**
     * Successful Response
     */
    200: DtoCarPublic;
};

export type CreateCarApiV1TripsTripIdCarsPostResponse = CreateCarApiV1TripsTripIdCarsPostResponses[keyof CreateCarApiV1TripsTripIdCarsPostResponses];

export type DeleteCarApiV1TripsTripIdCarsCarIdDeleteData = {
    body?: never;
    path: {
        trip_id: string;
        car_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/cars/{car_id}';
};

export type DeleteCarApiV1TripsTripIdCarsCarIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCarApiV1TripsTripIdCarsCarIdDeleteError = DeleteCarApiV1TripsTripIdCarsCarIdDeleteErrors[keyof DeleteCarApiV1TripsTripIdCarsCarIdDeleteErrors];

export type DeleteCarApiV1TripsTripIdCarsCarIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteCarApiV1TripsTripIdCarsCarIdDeleteResponse = DeleteCarApiV1TripsTripIdCarsCarIdDeleteResponses[keyof DeleteCarApiV1TripsTripIdCarsCarIdDeleteResponses];

export type GetCarByIdApiV1TripsTripIdCarsCarIdGetData = {
    body?: never;
    path: {
        trip_id: string;
        car_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/cars/{car_id}';
};

export type GetCarByIdApiV1TripsTripIdCarsCarIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCarByIdApiV1TripsTripIdCarsCarIdGetError = GetCarByIdApiV1TripsTripIdCarsCarIdGetErrors[keyof GetCarByIdApiV1TripsTripIdCarsCarIdGetErrors];

export type GetCarByIdApiV1TripsTripIdCarsCarIdGetResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetCarByIdApiV1TripsTripIdCarsCarIdGetResponse = GetCarByIdApiV1TripsTripIdCarsCarIdGetResponses[keyof GetCarByIdApiV1TripsTripIdCarsCarIdGetResponses];

export type GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetData = {
    body?: never;
    path: {
        trip_id: string;
        car_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/cars/{car_id}/passengers';
};

export type GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetError = GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetErrors[keyof GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetErrors];

export type GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetResponses = {
    /**
     * Successful Response
     */
    200: DtoListPassengerPublic;
};

export type GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetResponse = GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetResponses[keyof GetPassengersApiV1TripsTripIdCarsCarIdPassengersGetResponses];

export type AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostData = {
    body: PassengerCreate;
    path: {
        trip_id: string;
        car_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/cars/{car_id}/passengers';
};

export type AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostError = AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostErrors[keyof AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostErrors];

export type AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostResponses = {
    /**
     * Successful Response
     */
    200: DtoPassengerCreate;
};

export type AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostResponse = AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostResponses[keyof AddPassengerApiV1TripsTripIdCarsCarIdPassengersPostResponses];

export type GetInvitedUsersApiV1TripsTripIdInvitesGetData = {
    body?: never;
    path: {
        trip_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/invites';
};

export type GetInvitedUsersApiV1TripsTripIdInvitesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetInvitedUsersApiV1TripsTripIdInvitesGetError = GetInvitedUsersApiV1TripsTripIdInvitesGetErrors[keyof GetInvitedUsersApiV1TripsTripIdInvitesGetErrors];

export type GetInvitedUsersApiV1TripsTripIdInvitesGetResponses = {
    /**
     * Successful Response
     */
    200: DtoAttendanceList;
};

export type GetInvitedUsersApiV1TripsTripIdInvitesGetResponse = GetInvitedUsersApiV1TripsTripIdInvitesGetResponses[keyof GetInvitedUsersApiV1TripsTripIdInvitesGetResponses];

export type RsvpApiV1TripsTripIdInvitesUserIdPatchData = {
    body: TripParticipationRsvp;
    path: {
        trip_id: string;
        user_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/invites/{user_id}';
};

export type RsvpApiV1TripsTripIdInvitesUserIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RsvpApiV1TripsTripIdInvitesUserIdPatchError = RsvpApiV1TripsTripIdInvitesUserIdPatchErrors[keyof RsvpApiV1TripsTripIdInvitesUserIdPatchErrors];

export type RsvpApiV1TripsTripIdInvitesUserIdPatchResponses = {
    /**
     * Successful Response
     */
    200: DtoBool;
};

export type RsvpApiV1TripsTripIdInvitesUserIdPatchResponse = RsvpApiV1TripsTripIdInvitesUserIdPatchResponses[keyof RsvpApiV1TripsTripIdInvitesUserIdPatchResponses];

export type InviteUserApiV1TripsTripIdInvitesUserIdPostData = {
    body: DeepLink;
    path: {
        trip_id: string;
        user_id: string;
    };
    query?: never;
    url: '/api/v1/trips/{trip_id}/invites/{user_id}';
};

export type InviteUserApiV1TripsTripIdInvitesUserIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InviteUserApiV1TripsTripIdInvitesUserIdPostError = InviteUserApiV1TripsTripIdInvitesUserIdPostErrors[keyof InviteUserApiV1TripsTripIdInvitesUserIdPostErrors];

export type InviteUserApiV1TripsTripIdInvitesUserIdPostResponses = {
    /**
     * Successful Response
     */
    201: DtoBool;
};

export type InviteUserApiV1TripsTripIdInvitesUserIdPostResponse = InviteUserApiV1TripsTripIdInvitesUserIdPostResponses[keyof InviteUserApiV1TripsTripIdInvitesUserIdPostResponses];

export type GetFriendsApiV1FriendshipsMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/friendships/me';
};

export type GetFriendsApiV1FriendshipsMeGetResponses = {
    /**
     * Successful Response
     */
    200: DtoListUserWithFriendshipInfo;
};

export type GetFriendsApiV1FriendshipsMeGetResponse = GetFriendsApiV1FriendshipsMeGetResponses[keyof GetFriendsApiV1FriendshipsMeGetResponses];

export type CreateFriendRequestApiV1FriendshipsPostData = {
    body: FriendshipCreate;
    path?: never;
    query?: never;
    url: '/api/v1/friendships/';
};

export type CreateFriendRequestApiV1FriendshipsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateFriendRequestApiV1FriendshipsPostError = CreateFriendRequestApiV1FriendshipsPostErrors[keyof CreateFriendRequestApiV1FriendshipsPostErrors];

export type CreateFriendRequestApiV1FriendshipsPostResponses = {
    /**
     * Successful Response
     */
    200: DtoBool;
};

export type CreateFriendRequestApiV1FriendshipsPostResponse = CreateFriendRequestApiV1FriendshipsPostResponses[keyof CreateFriendRequestApiV1FriendshipsPostResponses];

export type CheckFriendRequestsApiV1FriendshipsUserIdGetData = {
    body?: never;
    path: {
        user_id: string;
    };
    query: {
        request_type: FriendRequestType | null;
    };
    url: '/api/v1/friendships/{user_id}';
};

export type CheckFriendRequestsApiV1FriendshipsUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CheckFriendRequestsApiV1FriendshipsUserIdGetError = CheckFriendRequestsApiV1FriendshipsUserIdGetErrors[keyof CheckFriendRequestsApiV1FriendshipsUserIdGetErrors];

export type CheckFriendRequestsApiV1FriendshipsUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: DtoListFriendshipPublic;
};

export type CheckFriendRequestsApiV1FriendshipsUserIdGetResponse = CheckFriendRequestsApiV1FriendshipsUserIdGetResponses[keyof CheckFriendRequestsApiV1FriendshipsUserIdGetResponses];

export type RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchData = {
    body: FriendshipUpdate;
    path: {
        friendship_id: string;
    };
    query?: never;
    url: '/api/v1/friendships/{friendship_id}';
};

export type RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchError = RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchErrors[keyof RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchErrors];

export type RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchResponses = {
    /**
     * Successful Response
     */
    200: DtoFriendshipPublic;
};

export type RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchResponse = RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchResponses[keyof RespondToFriendRequestApiV1FriendshipsFriendshipIdPatchResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};